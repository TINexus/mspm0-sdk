MSPM0 SDK Examples Guide
========================

1. Introduction
---------------

The MSPM0 SDK is packaged with a wide selection of code examples to enable engineers to develop applications on Texas Instrumentsâ€™ MSPM0 family of microcontrollers.

The examples folder is divided into RTOS and non-RTOS subfolders (currently only non-RTOS is supported). These folders contain examples for each LaunchPad and are organized based on function with lower-level Driverlib examples, higher-level TI Drivers examples, and examples for middleware such as GUI Composer, LIN, IQMath, and others.

Some examples support `SysConfig <https://www.ti.com/tool/SYSCONFIG>`__ to simplify the device configuration and accelerate software development. Refer to the SDK QuickStart guide for more details on how to get started using SysConfig, and look for the SysConfig symbol |image0| in the sections below.

2. MSPM0 SDK Examples
---------------------

2.1 Demos
~~~~~~~~~

The MSPM0 SDK includes several demos to showcase the functionalities of various devices.

Each demo is packaged with its own documentation, full source code, and project files for different supported IDEs and compilers, making the demos easy to use.

Stay tuned for more examples and functionality.

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

blood\_pressure\_monitor

.. raw:: html

   </td>

.. raw:: html

   <td>

Blood Pressure Monitor demos

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bq769x2\_control\_i2c

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrate BQ769x2 control through I2C

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image1|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

dualray\_smoke\_detector

.. raw:: html

   </td>

.. raw:: html

   <td>

Dualray smoke detector demo

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image2|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

one\_wire

.. raw:: html

   </td>

.. raw:: html

   <td>

1-wire target emulating a EEPROM interface

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image3|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

out\_of\_box

.. raw:: html

   </td>

.. raw:: html

   <td>

Out of Box experience for MSPM0 LaunchPads

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

pulse\_oximeter

.. raw:: html

   </td>

.. raw:: html

   <td>

Pulse oximeter demos

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image4|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2 DriverLib
~~~~~~~~~~~~~

DriverLib is a set of low level drivers providing an API for accessing MSPM0 registers and full device functionality.

The examples below use the Driverlib API to demonstrate the device functionality and range from simple use cases such as toggling a GPIO output pin to more complex use cases where multiple device peripherals are used.

Each example is packaged with its own documentation, full source code, and project files for different supported IDEs and compilers, making the examples easy to use.

2.2.1 AES Accelerator (AES)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

aes\_cbc\_256\_enc\_dec

.. raw:: html

   </td>

.. raw:: html

   <td>

AES256 CBC encryption and decryption example

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image5|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

aes\_cfb\_256\_decrypt

.. raw:: html

   </td>

.. raw:: html

   <td>

AES CFB 256 bit decryption example

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image6|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

aes\_ofb\_128\_encrypt

.. raw:: html

   </td>

.. raw:: html

   <td>

AES OFB 128 bit encryption example

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image7|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.2 Analog-to-Digital Converter (ADC)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_14bit\_resolution

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 conversion at maximum frequency using DMA with hardware averaging enabled

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image8|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image9|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_internal\_temp\_sensor\_mathacl

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 samples internal temperature sensor and converts reading to Celsius and Fahrenheit degrees

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image10|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_max\_freq\_dma

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 conversion at maximum frequency using DMA

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image11|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image12|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_max\_freq\_dma\_8bit

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 conversion at maximum frequency using DMA in 8 bit resolution

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image13|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image14|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_monitor\_supply

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 monitors voltage supply channel

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image15|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image16|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_sequence\_conversion

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrate configuring ADC to trigger sequence of conversions on 4 different channels

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image17|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image18|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_simultaneous\_trigger\_event

.. raw:: html

   </td>

.. raw:: html

   <td>

Dual ADC12 conversion triggered by a Timer event

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image19|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_simultaneous\_trigger\_event\_stop

.. raw:: html

   </td>

.. raw:: html

   <td>

Dual ADC12 conversion triggered by a Timer event while in STOP mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image20|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_single\_conversion

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 simple single conversion triggered by software

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image21|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image22|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_single\_conversion\_vref\_external

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 single conversion triggered by software using external reference

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image23|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image24|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_single\_conversion\_vref\_internal

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 single conversion triggered by software using internal VREF

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image25|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image26|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_triggered\_by\_timer\_event

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 conversion triggered by a Timer event

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image27|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image28|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_triggered\_by\_timer\_event\_stop

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 conversion triggered by a Timer event while in STOP mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image29|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image30|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc12\_window\_comparator

.. raw:: html

   </td>

.. raw:: html

   <td>

ADC12 single conversion in repeat mode using window comparator feature

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image31|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image32|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.3 Comparator (COMP)
^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

comp\_analog\_filter

.. raw:: html

   </td>

.. raw:: html

   <td>

Comparator using external inputs with hysteresis and output analog filter

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image33|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image34|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

comp\_dac\_to\_timer\_event

.. raw:: html

   </td>

.. raw:: html

   <td>

Comparator output using 8-bit DAC triggers a timer event to measure timing

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image35|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image36|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

comp\_hs\_dac\_vref\_external

.. raw:: html

   </td>

.. raw:: html

   <td>

Comparator in high-speed mode using 8-bit DAC with external VREF

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image37|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image38|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

comp\_hs\_tima\_pwm\_fault

.. raw:: html

   </td>

.. raw:: html

   <td>

Comparator in high-speed mode triggers a TIMA fault

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image39|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

comp\_lp\_dac\_vref\_internal

.. raw:: html

   </td>

.. raw:: html

   <td>

Comparator in low-power mode using 8-bit DAC with internal VREF

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image40|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.4 Controller Area Network (CAN)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

mcan\_loopback

.. raw:: html

   </td>

.. raw:: html

   <td>

MCAN transmits and receives messages using loopback mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image41|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

mcan\_message\_rx

.. raw:: html

   </td>

.. raw:: html

   <td>

Example configured to receive CAN and CAN-FD frames

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image42|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

mcan\_message\_rx\_tcan114x

.. raw:: html

   </td>

.. raw:: html

   <td>

Example configured to receive CAN and CAN-FD frames using BOOSTXL-TCAN1145 boosterpack.

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image43|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

mcan\_multi\_message\_tx

.. raw:: html

   </td>

.. raw:: html

   <td>

CAN-FD transmits two messages with unique ID on GPIO interrupt

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image44|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

mcan\_multi\_message\_tx\_tcan114x

.. raw:: html

   </td>

.. raw:: html

   <td>

CAN-FD transmits two messages with unique ID on GPIO interrupt using BOOSTXL-TCAN1145 boosterpack.

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image45|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

mcan\_single\_message\_tx

.. raw:: html

   </td>

.. raw:: html

   <td>

CAN-FD transmits a single message on GPIO interrupt

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image46|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.5 Cyclic Redundancy Check (CRC)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

crc\_calculate\_checksum

.. raw:: html

   </td>

.. raw:: html

   <td>

CRC32 checksum calculation of a memory block

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image47|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image48|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

crc\_calculate\_checksum\_dma

.. raw:: html

   </td>

.. raw:: html

   <td>

CRC32 checksum calculation of a memory block using DMA block transfer

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image49|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image50|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.6 Digital-to-Analog Converter (DAC)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

dac12\_dma\_sampletimegen

.. raw:: html

   </td>

.. raw:: html

   <td>

DAC12 using DMA with sample time generator to generate sine wave

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image51|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

dac12\_fifo\_sampletimegen

.. raw:: html

   </td>

.. raw:: html

   <td>

DAC12 sending repetitive signal using FIFO and sample timer generator

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image52|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

dac12\_fifo\_timer\_event

.. raw:: html

   </td>

.. raw:: html

   <td>

DAC12 sending a sawtooth signal using FIFO and triggered by a Timer event

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image53|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

dac12\_fixed\_voltage\_vref\_internal

.. raw:: html

   </td>

.. raw:: html

   <td>

DAC12 setting a fixed voltage output

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image54|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.7 Direct Memory Access (DMA)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

dma\_block\_transfer

.. raw:: html

   </td>

.. raw:: html

   <td>

DMA copies from Flash main memory to SRAM memory

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image55|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image56|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

dma\_fill\_data

.. raw:: html

   </td>

.. raw:: html

   <td>

DMA memory fill of SRAM using DMA

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image57|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image58|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

dma\_table\_transfer

.. raw:: html

   </td>

.. raw:: html

   <td>

DMA using Table mode with DMA

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image59|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image60|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.8 Events Manager
^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

event\_input\_triggers\_output

.. raw:: html

   </td>

.. raw:: html

   <td>

Event configuration to toggle LED when switch is pressed

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image61|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image62|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.9 GPIO
^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gpio\_input\_capture

.. raw:: html

   </td>

.. raw:: html

   <td>

GPIO triggers interrupt by input capture pin

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image63|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image64|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gpio\_simultaneous\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates how to simultaneously service three GPIO interrupts

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image65|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gpio\_software\_poll

.. raw:: html

   </td>

.. raw:: html

   <td>

GPIO output is set based on polled input

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image66|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image67|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gpio\_toggle\_output

.. raw:: html

   </td>

.. raw:: html

   <td>

GPIO toggling an output pin

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image68|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image69|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gpio\_toggle\_output\_cpp

.. raw:: html

   </td>

.. raw:: html

   <td>

GPIO toggling output pins using C++

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image70|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image71|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gpio\_toggle\_output\_hiz

.. raw:: html

   </td>

.. raw:: html

   <td>

GPIO toggling an ouputput pin configured as Hi-Z

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image72|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image73|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.10 General-Purpose Amplifier (GPAMP)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gpamp\_buffer\_to\_adc

.. raw:: html

   </td>

.. raw:: html

   <td>

GPAmp configured in buffer mode with output to ADC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image74|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image75|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gpamp\_general\_purpose\_rri

.. raw:: html

   </td>

.. raw:: html

   <td>

GPAmp configured in general purpose Rail-to-Rail mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image76|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image77|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.11 Inter-Integrated Circuit (I2C)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

i2c\_controller\_rw\_multibyte\_fifo\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

I2C Controller reading and writing multiple bytes using interrupts with FIFO

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image78|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image79|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

i2c\_controller\_rw\_multibyte\_fifo\_poll

.. raw:: html

   </td>

.. raw:: html

   <td>

I2C Controller reading and writing multiple bytes polling FIFO

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image80|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image81|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

i2c\_controller\_target\_dynamic\_switching

.. raw:: html

   </td>

.. raw:: html

   <td>

I2C dynamic switching between Controller and Target modes

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image82|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image83|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

i2c\_multicontroller\_arbitration

.. raw:: html

   </td>

.. raw:: html

   <td>

I2C Controller detecting arbitration error

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image84|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image85|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

i2c\_target\_rw\_multibyte\_fifo\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

I2C Target reading and writing multiple bytes using interrupts

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image86|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image87|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

i2c\_target\_rw\_multibyte\_fifo\_interrupts\_stop

.. raw:: html

   </td>

.. raw:: html

   <td>

I2C Target reading and writing multiple bytes using interrupts while in STOP mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image88|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image89|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

i2c\_target\_rw\_multibyte\_fifo\_poll

.. raw:: html

   </td>

.. raw:: html

   <td>

I2C Target reading and writing multiple bytes polling FIFO

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image90|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image91|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.12 Math Accelerator (MATHACL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

mathacl\_mpy\_div\_op

.. raw:: html

   </td>

.. raw:: html

   <td>

MATHACL multiply and divide using fixed point

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image92|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

mathacl\_trig\_op

.. raw:: html

   </td>

.. raw:: html

   <td>

MATHACL implementation of trigonometric functions

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image93|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.13 Non-Volatile Memory (FLASHCTL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

flashctl\_blank\_verify

.. raw:: html

   </td>

.. raw:: html

   <td>

Implementation of Flash Blank Verify command

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image94|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image95|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

flashctl\_dynamic\_memory\_protection

.. raw:: html

   </td>

.. raw:: html

   <td>

Flash configured with dynamic protection

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image96|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image97|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

flashctl\_ecc\_error\_injection

.. raw:: html

   </td>

.. raw:: html

   <td>

Flash ECC testing and SEC and DED error detection

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image98|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

flashctl\_multiple\_size\_read\_verify

.. raw:: html

   </td>

.. raw:: html

   <td>

Implementation of Flash read verify commands on multiple data sizes, with and without ECC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image99|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image100|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

flashctl\_multiple\_size\_write

.. raw:: html

   </td>

.. raw:: html

   <td>

Flash writing of different size data

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image101|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image102|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

flashctl\_nonmain\_memory\_write

.. raw:: html

   </td>

.. raw:: html

   <td>

Read-write of Non-Main Flash memory

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image103|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image104|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

flashctl\_program\_with\_ecc

.. raw:: html

   </td>

.. raw:: html

   <td>

Flash programming with ECC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image105|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.14 Operational Amplifier (OPA)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

opa\_burnout\_current\_source\_to\_adc

.. raw:: html

   </td>

.. raw:: html

   <td>

OPA in buffer mode enabling burnout current source to ADC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image106|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image107|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

opa\_dac8\_output\_buffer

.. raw:: html

   </td>

.. raw:: html

   <td>

OPA in output buffer mode using 8-bit DAC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image108|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image109|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

opa\_general\_purpose\_rri

.. raw:: html

   </td>

.. raw:: html

   <td>

OPA in general purpose mode with Rail-to-Rail configuration

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image110|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image111|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

opa\_inverting\_pga\_with\_dac

.. raw:: html

   </td>

.. raw:: html

   <td>

OPA in inverting PGA configuration using DAC12 as bias

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image112|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

opa\_non\_inverting\_pga

.. raw:: html

   </td>

.. raw:: html

   <td>

OPA in non-inverting PGA configuration

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image113|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image114|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

opa\_signal\_chain\_to\_adc

.. raw:: html

   </td>

.. raw:: html

   <td>

Two OPAs configured in TIA and PGA, connected to ADC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image115|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.15 Other
^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

cinit\_bypass

.. raw:: html

   </td>

.. raw:: html

   <td>

Bypass CINIT skipping variable initialization

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image116|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image117|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

empty

.. raw:: html

   </td>

.. raw:: html

   <td>

Empty start-up project using DriverLib

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image118|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image119|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

empty\_cpp

.. raw:: html

   </td>

.. raw:: html

   <td>

Empty C++ start-up project using DriverLib

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image120|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image121|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

empty\_driverlib\_src

.. raw:: html

   </td>

.. raw:: html

   <td>

Empty start-up project using DriverLib

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image122|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image123|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

empty\_library

.. raw:: html

   </td>

.. raw:: html

   <td>

Empty start-up library project using DriverLib

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

nvic\_interrupt\_disable

.. raw:: html

   </td>

.. raw:: html

   <td>

NVIC used to demonstrate best approach to disable interrupts

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image124|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image125|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

nvic\_interrupt\_grouping

.. raw:: html

   </td>

.. raw:: html

   <td>

NVIC configuration and use of interrupt grouping

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image126|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image127|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

sram\_parity

.. raw:: html

   </td>

.. raw:: html

   <td>

Initializes and uses Parity SRAM

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image128|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

systick\_periodic\_timer

.. raw:: html

   </td>

.. raw:: html

   <td>

SysTick generates periodic interrupt

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image129|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image130|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.16 Real-Time Clock (RTC)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

rtc\_calendar\_alarm\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

RTC sets calendar alarm and toggles GPIO when alarm is triggered

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image131|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

rtc\_offset\_calibration\_lfxt

.. raw:: html

   </td>

.. raw:: html

   <td>

RTC offset correction of crystal

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image132|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

rtc\_periodic\_alarm\_lfosc\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

RTC implementation of periodic alarm in STANDBY using LFOSC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image133|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

rtc\_periodic\_alarm\_lfxt\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

RTC implementation of periodic alarm in STANDBY using LFXT

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image134|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.17 Serial Peripheral Interface (SPI)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_controller\_command\_data\_control

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Controller transmit using command data (CD) control

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image135|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image136|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_controller\_echo\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Controller transmits data using Motorola format

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image137|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image138|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_controller\_internal\_loopback\_poll

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Controller with internal loopback using polling

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image139|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image140|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_controller\_multibyte\_fifo\_dma\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Controller reading and writing multiple bytes using FIFO and DMA

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image141|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image142|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_controller\_multibyte\_fifo\_poll

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Controller reading and writing multiple bytes polling FIFO

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image143|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image144|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_controller\_register\_format

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Controller transmit and read data using register format

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image145|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image146|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_controller\_repeated\_multibyte\_fifo\_dma\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Controller reading and writing multiple bytes using FIFO and DMA every second

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image147|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image148|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_peripheral\_echo\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Peripheral echoes data using Motorola format

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image149|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image150|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_peripheral\_multibyte\_fifo\_dma\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Peripheral reading and writing multiple bytes using FIFO and DMA

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image151|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image152|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_peripheral\_multibyte\_fifo\_poll

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Peripheral reading and writing multiple bytes polling FIFO

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image153|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image154|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_peripheral\_register\_format

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Peripheral transmit and read data using register format

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image155|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image156|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

spi\_peripheral\_repeated\_multibyte\_fifo\_dma\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

SPI Peripheral reading and writing multiple bytes using FIFO and DMA

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image157|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image158|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.18 System Controller (SYSCTL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

sysctl\_frequency\_clock\_counter

.. raw:: html

   </td>

.. raw:: html

   <td>

Monitor SYSOSC via Frequency Clock Counter (FCC)

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image159|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

sysctl\_hfxt\_run

.. raw:: html

   </td>

.. raw:: html

   <td>

Sets external HFXT as source to HSCLK and MCLK (48MHz)

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image160|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

sysctl\_lfxt\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

Sets LFXT as source to LFCLK (32kHz) and power policy in STANDBY0

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image161|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

sysctl\_mclk\_syspll

.. raw:: html

   </td>

.. raw:: html

   <td>

Sets MCLK to run from SYSPLL (80MHz)

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image162|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

sysctl\_power\_policy\_sleep\_to\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

SYSCTL switches between SLEEP mode and STANDBY modes

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image163|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image164|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

sysctl\_power\_policy\_sleep\_to\_stop

.. raw:: html

   </td>

.. raw:: html

   <td>

SYSCTL switches between SLEEP mode and STOP modes

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image165|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image166|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

sysctl\_shutdown

.. raw:: html

   </td>

.. raw:: html

   <td>

Show correct wake-up mechanism after SHUTDOWN vs STOP, STANDBY and SLEEP

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image167|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image168|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.19 Timer - Advanced (TIMA)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

tima\_timer\_mode\_periodic\_repeat\_count

.. raw:: html

   </td>

.. raw:: html

   <td>

TimerA in periodic mode using repeat-count feature

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image169|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

tima\_timer\_mode\_pwm\_dead\_band

.. raw:: html

   </td>

.. raw:: html

   <td>

TimerA outputs PWM signals with dead band insertion

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image170|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

tima\_trigger\_fail\_mechanism

.. raw:: html

   </td>

.. raw:: html

   <td>

TimerA demonstrating fault detection

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image171|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.20 Timer - General Purpose (TIMG)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timg\_32bit\_timer\_mode\_periodic\_sleep

.. raw:: html

   </td>

.. raw:: html

   <td>

32-bit timer in periodic mode while device is in SLEEP mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image172|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timg\_32bit\_timer\_mode\_pwm\_edge\_sleep

.. raw:: html

   </td>

.. raw:: html

   <td>

32-bit timer in PWM edge aligned mode while device is in SLEEP mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image173|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timg\_qei\_mode

.. raw:: html

   </td>

.. raw:: html

   <td>

TimerG uses QEI to decode relative position output of a quadrature encoder

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image174|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.21 Timer - Generic (TIMx)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_capture\_duty\_and\_period

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer calculates period and duty cycle

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image175|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image176|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_capture\_edge\_capture

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer edge time detection using Timer capture mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image177|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image178|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_compare\_edge\_count

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer edge counting capability using compare mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image179|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image180|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_one\_shot\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer in one-shot mode while device is in STANDBY mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image181|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image182|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_periodic\_sleep

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer in periodic mode while device is in SLEEP mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image183|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image184|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_periodic\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer in periodic mode while device is in STANDBY mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image185|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image186|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_periodic\_stop

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer in periodic mode while device is in STOP mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image187|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image188|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_pwm\_center\_stop

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer in PWM center aligned mode while device is in STOP mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image189|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image190|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_pwm\_cross\_trigger\_stop\_restore

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer in PWM mode after coming out of STOP with retention in SW

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image191|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_pwm\_edge\_sleep

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer in PWM edge aligned mode while device is in SLEEP mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image192|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image193|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

timx\_timer\_mode\_pwm\_edge\_sleep\_shadow

.. raw:: html

   </td>

.. raw:: html

   <td>

Timer updating PWM duty cycle using shadow load feature

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image194|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image195|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.22 True Random Number Generator (TRNG)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

trng\_sample

.. raw:: html

   </td>

.. raw:: html

   <td>

TRNG sampling to fill a buffer with random data

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image196|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

trng\_sample\_stop\_restore

.. raw:: html

   </td>

.. raw:: html

   <td>

TRNG sample random data after coming out of STOP with retention in SW

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image197|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.23 Universal Asynchronous Receiver-Transmitter (UART)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_echo\_interrupts\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

UART RX/TX echo using interrupts while device is in STANDBY mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image198|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image199|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_extend\_manchester\_echo

.. raw:: html

   </td>

.. raw:: html

   <td>

UART Extend using Manchester encoding, echo received packet

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image200|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image201|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_extend\_manchester\_send\_packet

.. raw:: html

   </td>

.. raw:: html

   <td>

UART Extend using Manchester encoding and decoding, send a packet

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image202|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image203|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_external\_loopback\_interrupt

.. raw:: html

   </td>

.. raw:: html

   <td>

UART RX/TX external loopback using interrupts

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image204|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image205|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_internal\_loopback\_standby\_restore

.. raw:: html

   </td>

.. raw:: html

   <td>

UART internal loopback after coming out of STANDBY with retention in SW

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image206|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_rs485\_receive\_packet

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrate UART in RS485 mode, receive a packet

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image207|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_rs485\_send\_packet

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrate UART in RS485 mode, send a packet

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image208|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_rw\_multibyte\_fifo\_poll

.. raw:: html

   </td>

.. raw:: html

   <td>

UART RX/TX using FIFOs with polling

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image209|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image210|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_rx\_hw\_flow\_control

.. raw:: html

   </td>

.. raw:: html

   <td>

UART RX using HW flow control

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image211|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image212|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_rx\_multibyte\_fifo\_dma\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

UART RX using a DMA trigger

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image213|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image214|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_tx\_console\_multibyte\_repeated\_fifo\_dma

.. raw:: html

   </td>

.. raw:: html

   <td>

UART TX to console using a continuous DMA Triggers

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image215|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image216|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_tx\_hw\_flow\_control

.. raw:: html

   </td>

.. raw:: html

   <td>

UART TX using hardware flow control

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image217|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image218|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_tx\_multibyte\_fifo\_dma\_interrupts

.. raw:: html

   </td>

.. raw:: html

   <td>

UART TX using a DMA trigger

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image219|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image220|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.2.24 Window Watchdog Timer (WWDT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

wwdt\_interval\_timer\_lfosc\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

WWDT interval timer mode using LFOSC while device is in STANDBY mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image221|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image222|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

wwdt\_interval\_timer\_lfxt\_standby

.. raw:: html

   </td>

.. raw:: html

   <td>

WWDT interval timer mode using LFXT while device is in STANDBY mode

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image223|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

wwdt\_window\_mode\_periodic\_reset

.. raw:: html

   </td>

.. raw:: html

   <td>

WWDT Window watchdog mode with periodic reset

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image224|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image225|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.3 TI-Drivers
~~~~~~~~~~~~~~

TI Drivers provide a robust set of intuitive, functional APIs that offer portable, feature-rich access to peripherals.

TI-Drivers for MSPM0 are under development, but the examples below provide a glimpse of expected functionality.

2.3.1 FreeRTOS
^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gpio\_interrupt

.. raw:: html

   </td>

.. raw:: html

   <td>

Toggles the LED(s) using a GPIO pin interrupt

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

i2c\_tmp

.. raw:: html

   </td>

.. raw:: html

   <td>

Read temperature from Tmp117 Sensor using I2C

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_callback

.. raw:: html

   </td>

.. raw:: html

   <td>

UART simple echo using callback

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_echo

.. raw:: html

   </td>

.. raw:: html

   <td>

UART simple echo

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.3.2 No RTOS
^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

uart\_echo

.. raw:: html

   </td>

.. raw:: html

   <td>

UART simple echo

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.4 Boot Image Manager (BIM)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The MSPM0 SDK includes a boot image manager implementation to demonstrate how a user can verify integrity and authenticity of images loaded onto their device.

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bim\_sample\_image

.. raw:: html

   </td>

.. raw:: html

   <td>

Sample GPIO toggle image for BIM

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image226|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image227|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

boot\_application

.. raw:: html

   </td>

.. raw:: html

   <td>

Boot Image Manager Using MCUBoot

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image228|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image229|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.5 Bootstrap Loader (BSL)
~~~~~~~~~~~~~~~~~~~~~~~~~~

The bootstrap loader (BSL) provides a method to program and/or verify the device memory through a standard UART or I2C serial interface. Among its features, the BSL supports MAIN flash plugins to enable additional interfaces and functionality.

The MSPM0 SDK includes examples showing how to implement plugins and other BSL functionality in MAIN Flash.

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bsl\_host\_mcu\_i2c\_to\_m0g\_target

.. raw:: html

   </td>

.. raw:: html

   <td>

Shows an implementation of BSL I2C Flash interface with MSPM0G as host to MSPM0G target

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image230|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bsl\_host\_mcu\_i2c\_to\_m0l\_target

.. raw:: html

   </td>

.. raw:: html

   <td>

Shows an implementation of BSL I2C Flash interface with MSPM0G as host to MSPM0L target

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image231|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bsl\_host\_mcu\_spi

.. raw:: html

   </td>

.. raw:: html

   <td>

Shows an implementation of a BSL host utilizing SPI interface

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bsl\_host\_mcu\_uart\_to\_m0g\_target

.. raw:: html

   </td>

.. raw:: html

   <td>

Shows an implementation of BSL UART Flash interface with MSPM0G as host to MSPM0G target

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image232|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bsl\_host\_mcu\_uart\_to\_m0l\_target

.. raw:: html

   </td>

.. raw:: html

   <td>

Shows an implementation of BSL UART Flash interface with MSPM0G as host to MSPM0L target

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image233|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bsl\_i2c\_flash\_interface

.. raw:: html

   </td>

.. raw:: html

   <td>

Shows an implementation of BSL I2C Flash interface

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image234|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image235|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bsl\_software\_invoke

.. raw:: html

   </td>

.. raw:: html

   <td>

Jump to ROM bootloader on application request

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image236|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image237|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bsl\_spi\_flash\_interface

.. raw:: html

   </td>

.. raw:: html

   <td>

Shows an implementation of a BSL SPI Flash interface

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image238|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image239|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

bsl\_uart\_flash\_interface

.. raw:: html

   </td>

.. raw:: html

   <td>

Shows an implementation of a BSL UART Flash interface

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image240|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image241|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

secondary\_bsl

.. raw:: html

   </td>

.. raw:: html

   <td>

Implements a secondary bootloader in Main overriding the ROM BSL

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image242|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image243|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.6 CMSIS-DSP
~~~~~~~~~~~~~

The CMSIS DSP software library includes a comprehensive set of signal processing functions for use on Cortex-M MCUs.

The MSPM0 SDK includes examples showing how to get started using CMSIS DSP.

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

cmsis\_dsp\_empty

.. raw:: html

   </td>

.. raw:: html

   <td>

Empty example using CMSIS-DSP

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image244|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image245|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

cmsis\_dsp\_fft\_q15

.. raw:: html

   </td>

.. raw:: html

   <td>

FFT of fixed point array using CMSIS-DSP

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image246|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image247|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.7 Cookbook
~~~~~~~~~~~~

The MSPM0 SDK Cookbook contains examples showing more complex functionality implemented with multiple peripherals.

The examples use DriverLib APIs, and includes full source code and documentation with detailed usage instructions.

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc\_dma\_ping\_pong

.. raw:: html

   </td>

.. raw:: html

   <td>

Capture ADC data into 2 (ping-pong) buffers

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image248|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc\_to\_pwm

.. raw:: html

   </td>

.. raw:: html

   <td>

Convert analog voltage to PWM

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image249|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image250|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc\_to\_spi\_peripheral

.. raw:: html

   </td>

.. raw:: html

   <td>

Sample ADC and respond to SPI commands sent by a controller

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image251|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image252|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

adc\_to\_uart

.. raw:: html

   </td>

.. raw:: html

   <td>

Configures the ADC0 to trigger single conversion and send the ADC data through UART

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image253|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image254|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

digital\_mux

.. raw:: html

   </td>

.. raw:: html

   <td>

Emulate a digital mux with GPIO

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image255|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

diode\_matrix

.. raw:: html

   </td>

.. raw:: html

   <td>

Drive LEDs with fewer pins using diode matrix

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image256|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

fir\_low\_pass\_filter

.. raw:: html

   </td>

.. raw:: html

   <td>

Applies digital FIR low-pass filter to sampled ADC signals

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image257|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

iir\_low\_pass\_filter

.. raw:: html

   </td>

.. raw:: html

   <td>

Applies digital IIR filter to sampled ADC signals

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image258|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

power\_sequencing

.. raw:: html

   </td>

.. raw:: html

   <td>

This sub system allows for different pins/applications be turned on/off in a sequence as to not over load the device from simultaneous power consumption.

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image259|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image260|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

programmable\_gain\_amplifier\_1

.. raw:: html

   </td>

.. raw:: html

   <td>

Use programmable gain amplifier to dynamically adjust gain

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image261|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

programmable\_gain\_amplifier\_2

.. raw:: html

   </td>

.. raw:: html

   <td>

Use programmable gain amplifier to dynamically adjust gain and capture values with integrated ADC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image262|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

pushbutton\_change\_pwm

.. raw:: html

   </td>

.. raw:: html

   <td>

This example demonstrates using the two switches on the MSPM0 Launchpad to change the period and duty cycle on TIMA1 PWM output channels CC0 and CC1.

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image263|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

pwm\_dac

.. raw:: html

   </td>

.. raw:: html

   <td>

Use a timer to create a PWM DAC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image264|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

pwm\_led\_driver

.. raw:: html

   </td>

.. raw:: html

   <td>

Create a pulsating LED effect using timers

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image265|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image266|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

signal\_acquisition

.. raw:: html

   </td>

.. raw:: html

   <td>

OPA supports two different sensor input voltages and uses common ADC channel

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image267|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

temp\_sense\_thermistor

.. raw:: html

   </td>

.. raw:: html

   <td>

Sample LaunchPad thermistor using integrated Op-Amp and ADC

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image268|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

transimpedance\_amplifier

.. raw:: html

   </td>

.. raw:: html

   <td>

Configure Op-amp in transimpedance amplifier topology

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image269|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.8 DALI
~~~~~~~~

MSPM0 supports the DALI Protocol via the UART module. DALI (Digitally Addressable Lighting Interface) is a serial protocol for digital lighting control that allows for simple and efficient communication between various lighting application gear and controllers.

The MSPM0 SDK includes the source code and examples showing the implementation of supported solutions.

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

dali\_led\_demo

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates usage of DALI protocol with an LED control demo

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image270|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.9 EEPROM
~~~~~~~~~~

MSPM0 supports EEPROM emulation through its internal Flash. Compared to using an external serial EEPROM, EEPROM emulation using the internal Flash saves pin usage and cost.

The MSPM0 SDK includes a library and examples showing the implementation of supported solutions.

2.9.1 Type-A
^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

eeprom\_emulation\_type\_a

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates Type A EEPROM emulation to store non-volatile data

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

eeprom\_emulation\_type\_a\_test

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates a more detailed use case of Type A EEPROM emulation to store blocks of non-volatile data

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.9.2 Type-B
^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

eeprom\_emulation\_type\_b

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates Type B EEPROM emulation to store user data

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

eeprom\_emulation\_type\_b\_test

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates a more detailed use case of Type B EEPROM emulation to store user data

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

Y

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.10 GUI Composer
~~~~~~~~~~~~~~~~~

GUI Composer is a browser-based tool for developing PC-side HTML-based GUIs that can complement your embedded project or application.

The MSPM0 SDK includes a library and various examples showing the implementation of supported protocols.

2.10.1 Streaming Protocols
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gc\_simple\_json

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates basic usage of GUI Composer communication using JSON-formatted strings

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image271|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image272|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

gc\_simple\_messagepack

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates basic usage of GUI Composer communication using MessagePack protocol

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image273|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image274|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.11 IQMath
~~~~~~~~~~~

IQMath is a collection of highly optimized and high-precision fixed-point mathematical functions.

The MSPM0 SDK includes IQMath support using simple C runtime-system (RTS) functions, and leveraging the MathAcl hardware accelerator.

2.11.1 Compiler RTS library
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

iqmath\_rts\_ops\_test

.. raw:: html

   </td>

.. raw:: html

   <td>

Implements various fixed-point operations leveraging the RTS implementation of IQMath

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image275|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image276|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.11.2 MathACL
^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

iqmath\_mathacl\_ops\_test

.. raw:: html

   </td>

.. raw:: html

   <td>

Implements various fixed-point operations leveraging the MathACL implementation of IQMath

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image277|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.12 RTOS Kernel
~~~~~~~~~~~~~~~~

The MSPM0 SDK includes a collection of examples to test kernel functionality.

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

blink\_led

.. raw:: html

   </td>

.. raw:: html

   <td>

Simple FreeRTOS LED blinky demo using two tasks

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image278|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image279|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

posix\_demo

.. raw:: html

   </td>

.. raw:: html

   <td>

Simple Posix FreeRTOS blinky LED demo

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image280|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image281|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.13 LIN
~~~~~~~~

The Local Interconnect Network (LIN) is a multipoint, low-cost, easily-implemented communication bus commonly used in automobiles.

The MSPM0 SDK includes easy-to-use examples for Commander and Responder.

2.13.1 Commander
^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

lin\_commander

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates basic implementation of LIN commander to transmit and receive LIN 2.0 packets using UART

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image282|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image283|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.13.2 Responder
^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

lin\_responder

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates basic implementation of LIN responder to transmit and receive LIN 2.0 packets using UART

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image284|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image285|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.14 Sensored Trap Hall Motor Control
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The MSPM0 SDK includes examples to evaluate the sensored trap hall motor control library with the DRV8316REVM and DRV8329AEVM. These firmware are designed for a GUI to make testing and evaluation quick for the user.

Stay tuned for more examples and functionality coming soon.

2.14.1 DRV8316
^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

drv8316revm-gui-firmware

.. raw:: html

   </td>

.. raw:: html

   <td>

Firmware for LP\_MSPM0G3507 and DRV8316R EVM GUI

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image286|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.14.2 DRV8329
^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

drv8329aevm-gui-firmware

.. raw:: html

   </td>

.. raw:: html

   <td>

Firmware for LP\_MSPM0G3507 and DRV8329A EVM GUI

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image287|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.15 Sensorless FOC Motor Control
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The MSPM0 SDK includes examples to evaluate the sensorless FOC motor control library with the DRV8323RS EVM. These firmware are designed for a GUI to make testing and evaluation quick for the user.

Stay tuned for more examples and functionality coming soon.

2.15.1 DRV8323RS
^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

sensorless-foc-demo

.. raw:: html

   </td>

.. raw:: html

   <td>

Demo sensorless FOC code for LP\_MSPM0G3507 and DRV8323RS EVM GUI

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image288|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.16 Brushed Motor Control
~~~~~~~~~~~~~~~~~~~~~~~~~~

The MSPM0 SDK includes an example to evaluate the brushed motor control library with the DRV8706-Q1 EVM. This firmware was designed for a GUI to make testing and evaluation quick for the user.

Stay tuned for more examples and functionality coming soon.

2.16.1 DRV8706-Q1
^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

drv8706s-q1evm-gui-firmware

.. raw:: html

   </td>

.. raw:: html

   <td>

Firmware for LP\_MSPM0L1306 and DRV8706S-Q1 EVM GUI

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image289|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.17 Stepper Motor Control
~~~~~~~~~~~~~~~~~~~~~~~~~~

The MSPM0 SDK includes examples to evaluate the stepper motor control library with the DRV8411A and DRV8889-q1 EVM. These firmwares were designed for a GUI to make testing and evaluation quick for the user.

Stay tuned for more examples and functionality coming soon.

2.17.1 DRV8411A
^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

drv8411aevm-gui-firmware

.. raw:: html

   </td>

.. raw:: html

   <td>

Firmware for LP\_MSPM0L1306 and DRV8411AEVM GUI

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image290|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.17.2 DRV8889-Q1
^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

drv8889-q1evm-gui-firmware

.. raw:: html

   </td>

.. raw:: html

   <td>

Firmware for LP\_MSPM0L1306 and DRV8889-Q1 EVM GUI

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

N

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image291|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.18 PMBUS
~~~~~~~~~~

PMBus is a protocol design to interface with power management devices. It uses the SMBus protocol as a base.

The MSPM0 SDK includes a ready-to-go example for using an MSPM0 devices as a PMBus controller for a TPS544B20 device.

2.18.1 Controller
^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

pmbus\_controller\_tps544b20evm

.. raw:: html

   </td>

.. raw:: html

   <td>

Use MSPM0 to configure TPS544B20EVM over PMBus

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image292|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image293|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.19 SMBus
~~~~~~~~~~

The System Management Bus (SMBus) is a single-ended simple two-wire bus for lightweight communication.

The MSPM0 SDK includes easy-to-use examples for Controller and Target.

2.19.1 Controller
^^^^^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

smbus\_controller

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates basic implementation of SMBus Controller testing all SMBus 2.0 protocols using I2C

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image294|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image295|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

2.19.2 Target
^^^^^^^^^^^^^

.. raw:: html

   <table class="docutils align-default">

.. raw:: html

   <tr>

.. raw:: html

   <th rowspan="2">

Project Name

.. raw:: html

   </th>

.. raw:: html

   <th rowspan="2">

Description

.. raw:: html

   </th>

.. raw:: html

   <th colspan="2">

.. raw:: html

   <p style="text-align: center;">

EVM

.. raw:: html

   </p>

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <th>

LP\_MSPM0G3507

.. raw:: html

   </th>

.. raw:: html

   <th>

LP\_MSPM0L1306

.. raw:: html

   </th>

.. raw:: html

   </tr>

.. raw:: html

   <tr>

.. raw:: html

   <td>

smbus\_target

.. raw:: html

   </td>

.. raw:: html

   <td>

Demonstrates basic implementation of SMBus Target testing all SMBus 2.0 protocols using I2C

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image296|

.. raw:: html

   </td>

.. raw:: html

   <td align="center">

|image297|

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

.. |image0| image:: ./images/examples_guide/ex_sysconfig.png
.. |image1| image:: ./images/examples_guide/ex_sysconfig.png
.. |image2| image:: ./images/examples_guide/ex_sysconfig.png
.. |image3| image:: ./images/examples_guide/ex_sysconfig.png
.. |image4| image:: ./images/examples_guide/ex_sysconfig.png
.. |image5| image:: ./images/examples_guide/ex_sysconfig.png
.. |image6| image:: ./images/examples_guide/ex_sysconfig.png
.. |image7| image:: ./images/examples_guide/ex_sysconfig.png
.. |image8| image:: ./images/examples_guide/ex_sysconfig.png
.. |image9| image:: ./images/examples_guide/ex_sysconfig.png
.. |image10| image:: ./images/examples_guide/ex_sysconfig.png
.. |image11| image:: ./images/examples_guide/ex_sysconfig.png
.. |image12| image:: ./images/examples_guide/ex_sysconfig.png
.. |image13| image:: ./images/examples_guide/ex_sysconfig.png
.. |image14| image:: ./images/examples_guide/ex_sysconfig.png
.. |image15| image:: ./images/examples_guide/ex_sysconfig.png
.. |image16| image:: ./images/examples_guide/ex_sysconfig.png
.. |image17| image:: ./images/examples_guide/ex_sysconfig.png
.. |image18| image:: ./images/examples_guide/ex_sysconfig.png
.. |image19| image:: ./images/examples_guide/ex_sysconfig.png
.. |image20| image:: ./images/examples_guide/ex_sysconfig.png
.. |image21| image:: ./images/examples_guide/ex_sysconfig.png
.. |image22| image:: ./images/examples_guide/ex_sysconfig.png
.. |image23| image:: ./images/examples_guide/ex_sysconfig.png
.. |image24| image:: ./images/examples_guide/ex_sysconfig.png
.. |image25| image:: ./images/examples_guide/ex_sysconfig.png
.. |image26| image:: ./images/examples_guide/ex_sysconfig.png
.. |image27| image:: ./images/examples_guide/ex_sysconfig.png
.. |image28| image:: ./images/examples_guide/ex_sysconfig.png
.. |image29| image:: ./images/examples_guide/ex_sysconfig.png
.. |image30| image:: ./images/examples_guide/ex_sysconfig.png
.. |image31| image:: ./images/examples_guide/ex_sysconfig.png
.. |image32| image:: ./images/examples_guide/ex_sysconfig.png
.. |image33| image:: ./images/examples_guide/ex_sysconfig.png
.. |image34| image:: ./images/examples_guide/ex_sysconfig.png
.. |image35| image:: ./images/examples_guide/ex_sysconfig.png
.. |image36| image:: ./images/examples_guide/ex_sysconfig.png
.. |image37| image:: ./images/examples_guide/ex_sysconfig.png
.. |image38| image:: ./images/examples_guide/ex_sysconfig.png
.. |image39| image:: ./images/examples_guide/ex_sysconfig.png
.. |image40| image:: ./images/examples_guide/ex_sysconfig.png
.. |image41| image:: ./images/examples_guide/ex_sysconfig.png
.. |image42| image:: ./images/examples_guide/ex_sysconfig.png
.. |image43| image:: ./images/examples_guide/ex_sysconfig.png
.. |image44| image:: ./images/examples_guide/ex_sysconfig.png
.. |image45| image:: ./images/examples_guide/ex_sysconfig.png
.. |image46| image:: ./images/examples_guide/ex_sysconfig.png
.. |image47| image:: ./images/examples_guide/ex_sysconfig.png
.. |image48| image:: ./images/examples_guide/ex_sysconfig.png
.. |image49| image:: ./images/examples_guide/ex_sysconfig.png
.. |image50| image:: ./images/examples_guide/ex_sysconfig.png
.. |image51| image:: ./images/examples_guide/ex_sysconfig.png
.. |image52| image:: ./images/examples_guide/ex_sysconfig.png
.. |image53| image:: ./images/examples_guide/ex_sysconfig.png
.. |image54| image:: ./images/examples_guide/ex_sysconfig.png
.. |image55| image:: ./images/examples_guide/ex_sysconfig.png
.. |image56| image:: ./images/examples_guide/ex_sysconfig.png
.. |image57| image:: ./images/examples_guide/ex_sysconfig.png
.. |image58| image:: ./images/examples_guide/ex_sysconfig.png
.. |image59| image:: ./images/examples_guide/ex_sysconfig.png
.. |image60| image:: ./images/examples_guide/ex_sysconfig.png
.. |image61| image:: ./images/examples_guide/ex_sysconfig.png
.. |image62| image:: ./images/examples_guide/ex_sysconfig.png
.. |image63| image:: ./images/examples_guide/ex_sysconfig.png
.. |image64| image:: ./images/examples_guide/ex_sysconfig.png
.. |image65| image:: ./images/examples_guide/ex_sysconfig.png
.. |image66| image:: ./images/examples_guide/ex_sysconfig.png
.. |image67| image:: ./images/examples_guide/ex_sysconfig.png
.. |image68| image:: ./images/examples_guide/ex_sysconfig.png
.. |image69| image:: ./images/examples_guide/ex_sysconfig.png
.. |image70| image:: ./images/examples_guide/ex_sysconfig.png
.. |image71| image:: ./images/examples_guide/ex_sysconfig.png
.. |image72| image:: ./images/examples_guide/ex_sysconfig.png
.. |image73| image:: ./images/examples_guide/ex_sysconfig.png
.. |image74| image:: ./images/examples_guide/ex_sysconfig.png
.. |image75| image:: ./images/examples_guide/ex_sysconfig.png
.. |image76| image:: ./images/examples_guide/ex_sysconfig.png
.. |image77| image:: ./images/examples_guide/ex_sysconfig.png
.. |image78| image:: ./images/examples_guide/ex_sysconfig.png
.. |image79| image:: ./images/examples_guide/ex_sysconfig.png
.. |image80| image:: ./images/examples_guide/ex_sysconfig.png
.. |image81| image:: ./images/examples_guide/ex_sysconfig.png
.. |image82| image:: ./images/examples_guide/ex_sysconfig.png
.. |image83| image:: ./images/examples_guide/ex_sysconfig.png
.. |image84| image:: ./images/examples_guide/ex_sysconfig.png
.. |image85| image:: ./images/examples_guide/ex_sysconfig.png
.. |image86| image:: ./images/examples_guide/ex_sysconfig.png
.. |image87| image:: ./images/examples_guide/ex_sysconfig.png
.. |image88| image:: ./images/examples_guide/ex_sysconfig.png
.. |image89| image:: ./images/examples_guide/ex_sysconfig.png
.. |image90| image:: ./images/examples_guide/ex_sysconfig.png
.. |image91| image:: ./images/examples_guide/ex_sysconfig.png
.. |image92| image:: ./images/examples_guide/ex_sysconfig.png
.. |image93| image:: ./images/examples_guide/ex_sysconfig.png
.. |image94| image:: ./images/examples_guide/ex_sysconfig.png
.. |image95| image:: ./images/examples_guide/ex_sysconfig.png
.. |image96| image:: ./images/examples_guide/ex_sysconfig.png
.. |image97| image:: ./images/examples_guide/ex_sysconfig.png
.. |image98| image:: ./images/examples_guide/ex_sysconfig.png
.. |image99| image:: ./images/examples_guide/ex_sysconfig.png
.. |image100| image:: ./images/examples_guide/ex_sysconfig.png
.. |image101| image:: ./images/examples_guide/ex_sysconfig.png
.. |image102| image:: ./images/examples_guide/ex_sysconfig.png
.. |image103| image:: ./images/examples_guide/ex_sysconfig.png
.. |image104| image:: ./images/examples_guide/ex_sysconfig.png
.. |image105| image:: ./images/examples_guide/ex_sysconfig.png
.. |image106| image:: ./images/examples_guide/ex_sysconfig.png
.. |image107| image:: ./images/examples_guide/ex_sysconfig.png
.. |image108| image:: ./images/examples_guide/ex_sysconfig.png
.. |image109| image:: ./images/examples_guide/ex_sysconfig.png
.. |image110| image:: ./images/examples_guide/ex_sysconfig.png
.. |image111| image:: ./images/examples_guide/ex_sysconfig.png
.. |image112| image:: ./images/examples_guide/ex_sysconfig.png
.. |image113| image:: ./images/examples_guide/ex_sysconfig.png
.. |image114| image:: ./images/examples_guide/ex_sysconfig.png
.. |image115| image:: ./images/examples_guide/ex_sysconfig.png
.. |image116| image:: ./images/examples_guide/ex_sysconfig.png
.. |image117| image:: ./images/examples_guide/ex_sysconfig.png
.. |image118| image:: ./images/examples_guide/ex_sysconfig.png
.. |image119| image:: ./images/examples_guide/ex_sysconfig.png
.. |image120| image:: ./images/examples_guide/ex_sysconfig.png
.. |image121| image:: ./images/examples_guide/ex_sysconfig.png
.. |image122| image:: ./images/examples_guide/ex_sysconfig.png
.. |image123| image:: ./images/examples_guide/ex_sysconfig.png
.. |image124| image:: ./images/examples_guide/ex_sysconfig.png
.. |image125| image:: ./images/examples_guide/ex_sysconfig.png
.. |image126| image:: ./images/examples_guide/ex_sysconfig.png
.. |image127| image:: ./images/examples_guide/ex_sysconfig.png
.. |image128| image:: ./images/examples_guide/ex_sysconfig.png
.. |image129| image:: ./images/examples_guide/ex_sysconfig.png
.. |image130| image:: ./images/examples_guide/ex_sysconfig.png
.. |image131| image:: ./images/examples_guide/ex_sysconfig.png
.. |image132| image:: ./images/examples_guide/ex_sysconfig.png
.. |image133| image:: ./images/examples_guide/ex_sysconfig.png
.. |image134| image:: ./images/examples_guide/ex_sysconfig.png
.. |image135| image:: ./images/examples_guide/ex_sysconfig.png
.. |image136| image:: ./images/examples_guide/ex_sysconfig.png
.. |image137| image:: ./images/examples_guide/ex_sysconfig.png
.. |image138| image:: ./images/examples_guide/ex_sysconfig.png
.. |image139| image:: ./images/examples_guide/ex_sysconfig.png
.. |image140| image:: ./images/examples_guide/ex_sysconfig.png
.. |image141| image:: ./images/examples_guide/ex_sysconfig.png
.. |image142| image:: ./images/examples_guide/ex_sysconfig.png
.. |image143| image:: ./images/examples_guide/ex_sysconfig.png
.. |image144| image:: ./images/examples_guide/ex_sysconfig.png
.. |image145| image:: ./images/examples_guide/ex_sysconfig.png
.. |image146| image:: ./images/examples_guide/ex_sysconfig.png
.. |image147| image:: ./images/examples_guide/ex_sysconfig.png
.. |image148| image:: ./images/examples_guide/ex_sysconfig.png
.. |image149| image:: ./images/examples_guide/ex_sysconfig.png
.. |image150| image:: ./images/examples_guide/ex_sysconfig.png
.. |image151| image:: ./images/examples_guide/ex_sysconfig.png
.. |image152| image:: ./images/examples_guide/ex_sysconfig.png
.. |image153| image:: ./images/examples_guide/ex_sysconfig.png
.. |image154| image:: ./images/examples_guide/ex_sysconfig.png
.. |image155| image:: ./images/examples_guide/ex_sysconfig.png
.. |image156| image:: ./images/examples_guide/ex_sysconfig.png
.. |image157| image:: ./images/examples_guide/ex_sysconfig.png
.. |image158| image:: ./images/examples_guide/ex_sysconfig.png
.. |image159| image:: ./images/examples_guide/ex_sysconfig.png
.. |image160| image:: ./images/examples_guide/ex_sysconfig.png
.. |image161| image:: ./images/examples_guide/ex_sysconfig.png
.. |image162| image:: ./images/examples_guide/ex_sysconfig.png
.. |image163| image:: ./images/examples_guide/ex_sysconfig.png
.. |image164| image:: ./images/examples_guide/ex_sysconfig.png
.. |image165| image:: ./images/examples_guide/ex_sysconfig.png
.. |image166| image:: ./images/examples_guide/ex_sysconfig.png
.. |image167| image:: ./images/examples_guide/ex_sysconfig.png
.. |image168| image:: ./images/examples_guide/ex_sysconfig.png
.. |image169| image:: ./images/examples_guide/ex_sysconfig.png
.. |image170| image:: ./images/examples_guide/ex_sysconfig.png
.. |image171| image:: ./images/examples_guide/ex_sysconfig.png
.. |image172| image:: ./images/examples_guide/ex_sysconfig.png
.. |image173| image:: ./images/examples_guide/ex_sysconfig.png
.. |image174| image:: ./images/examples_guide/ex_sysconfig.png
.. |image175| image:: ./images/examples_guide/ex_sysconfig.png
.. |image176| image:: ./images/examples_guide/ex_sysconfig.png
.. |image177| image:: ./images/examples_guide/ex_sysconfig.png
.. |image178| image:: ./images/examples_guide/ex_sysconfig.png
.. |image179| image:: ./images/examples_guide/ex_sysconfig.png
.. |image180| image:: ./images/examples_guide/ex_sysconfig.png
.. |image181| image:: ./images/examples_guide/ex_sysconfig.png
.. |image182| image:: ./images/examples_guide/ex_sysconfig.png
.. |image183| image:: ./images/examples_guide/ex_sysconfig.png
.. |image184| image:: ./images/examples_guide/ex_sysconfig.png
.. |image185| image:: ./images/examples_guide/ex_sysconfig.png
.. |image186| image:: ./images/examples_guide/ex_sysconfig.png
.. |image187| image:: ./images/examples_guide/ex_sysconfig.png
.. |image188| image:: ./images/examples_guide/ex_sysconfig.png
.. |image189| image:: ./images/examples_guide/ex_sysconfig.png
.. |image190| image:: ./images/examples_guide/ex_sysconfig.png
.. |image191| image:: ./images/examples_guide/ex_sysconfig.png
.. |image192| image:: ./images/examples_guide/ex_sysconfig.png
.. |image193| image:: ./images/examples_guide/ex_sysconfig.png
.. |image194| image:: ./images/examples_guide/ex_sysconfig.png
.. |image195| image:: ./images/examples_guide/ex_sysconfig.png
.. |image196| image:: ./images/examples_guide/ex_sysconfig.png
.. |image197| image:: ./images/examples_guide/ex_sysconfig.png
.. |image198| image:: ./images/examples_guide/ex_sysconfig.png
.. |image199| image:: ./images/examples_guide/ex_sysconfig.png
.. |image200| image:: ./images/examples_guide/ex_sysconfig.png
.. |image201| image:: ./images/examples_guide/ex_sysconfig.png
.. |image202| image:: ./images/examples_guide/ex_sysconfig.png
.. |image203| image:: ./images/examples_guide/ex_sysconfig.png
.. |image204| image:: ./images/examples_guide/ex_sysconfig.png
.. |image205| image:: ./images/examples_guide/ex_sysconfig.png
.. |image206| image:: ./images/examples_guide/ex_sysconfig.png
.. |image207| image:: ./images/examples_guide/ex_sysconfig.png
.. |image208| image:: ./images/examples_guide/ex_sysconfig.png
.. |image209| image:: ./images/examples_guide/ex_sysconfig.png
.. |image210| image:: ./images/examples_guide/ex_sysconfig.png
.. |image211| image:: ./images/examples_guide/ex_sysconfig.png
.. |image212| image:: ./images/examples_guide/ex_sysconfig.png
.. |image213| image:: ./images/examples_guide/ex_sysconfig.png
.. |image214| image:: ./images/examples_guide/ex_sysconfig.png
.. |image215| image:: ./images/examples_guide/ex_sysconfig.png
.. |image216| image:: ./images/examples_guide/ex_sysconfig.png
.. |image217| image:: ./images/examples_guide/ex_sysconfig.png
.. |image218| image:: ./images/examples_guide/ex_sysconfig.png
.. |image219| image:: ./images/examples_guide/ex_sysconfig.png
.. |image220| image:: ./images/examples_guide/ex_sysconfig.png
.. |image221| image:: ./images/examples_guide/ex_sysconfig.png
.. |image222| image:: ./images/examples_guide/ex_sysconfig.png
.. |image223| image:: ./images/examples_guide/ex_sysconfig.png
.. |image224| image:: ./images/examples_guide/ex_sysconfig.png
.. |image225| image:: ./images/examples_guide/ex_sysconfig.png
.. |image226| image:: ./images/examples_guide/ex_sysconfig.png
.. |image227| image:: ./images/examples_guide/ex_sysconfig.png
.. |image228| image:: ./images/examples_guide/ex_sysconfig.png
.. |image229| image:: ./images/examples_guide/ex_sysconfig.png
.. |image230| image:: ./images/examples_guide/ex_sysconfig.png
.. |image231| image:: ./images/examples_guide/ex_sysconfig.png
.. |image232| image:: ./images/examples_guide/ex_sysconfig.png
.. |image233| image:: ./images/examples_guide/ex_sysconfig.png
.. |image234| image:: ./images/examples_guide/ex_sysconfig.png
.. |image235| image:: ./images/examples_guide/ex_sysconfig.png
.. |image236| image:: ./images/examples_guide/ex_sysconfig.png
.. |image237| image:: ./images/examples_guide/ex_sysconfig.png
.. |image238| image:: ./images/examples_guide/ex_sysconfig.png
.. |image239| image:: ./images/examples_guide/ex_sysconfig.png
.. |image240| image:: ./images/examples_guide/ex_sysconfig.png
.. |image241| image:: ./images/examples_guide/ex_sysconfig.png
.. |image242| image:: ./images/examples_guide/ex_sysconfig.png
.. |image243| image:: ./images/examples_guide/ex_sysconfig.png
.. |image244| image:: ./images/examples_guide/ex_sysconfig.png
.. |image245| image:: ./images/examples_guide/ex_sysconfig.png
.. |image246| image:: ./images/examples_guide/ex_sysconfig.png
.. |image247| image:: ./images/examples_guide/ex_sysconfig.png
.. |image248| image:: ./images/examples_guide/ex_sysconfig.png
.. |image249| image:: ./images/examples_guide/ex_sysconfig.png
.. |image250| image:: ./images/examples_guide/ex_sysconfig.png
.. |image251| image:: ./images/examples_guide/ex_sysconfig.png
.. |image252| image:: ./images/examples_guide/ex_sysconfig.png
.. |image253| image:: ./images/examples_guide/ex_sysconfig.png
.. |image254| image:: ./images/examples_guide/ex_sysconfig.png
.. |image255| image:: ./images/examples_guide/ex_sysconfig.png
.. |image256| image:: ./images/examples_guide/ex_sysconfig.png
.. |image257| image:: ./images/examples_guide/ex_sysconfig.png
.. |image258| image:: ./images/examples_guide/ex_sysconfig.png
.. |image259| image:: ./images/examples_guide/ex_sysconfig.png
.. |image260| image:: ./images/examples_guide/ex_sysconfig.png
.. |image261| image:: ./images/examples_guide/ex_sysconfig.png
.. |image262| image:: ./images/examples_guide/ex_sysconfig.png
.. |image263| image:: ./images/examples_guide/ex_sysconfig.png
.. |image264| image:: ./images/examples_guide/ex_sysconfig.png
.. |image265| image:: ./images/examples_guide/ex_sysconfig.png
.. |image266| image:: ./images/examples_guide/ex_sysconfig.png
.. |image267| image:: ./images/examples_guide/ex_sysconfig.png
.. |image268| image:: ./images/examples_guide/ex_sysconfig.png
.. |image269| image:: ./images/examples_guide/ex_sysconfig.png
.. |image270| image:: ./images/examples_guide/ex_sysconfig.png
.. |image271| image:: ./images/examples_guide/ex_sysconfig.png
.. |image272| image:: ./images/examples_guide/ex_sysconfig.png
.. |image273| image:: ./images/examples_guide/ex_sysconfig.png
.. |image274| image:: ./images/examples_guide/ex_sysconfig.png
.. |image275| image:: ./images/examples_guide/ex_sysconfig.png
.. |image276| image:: ./images/examples_guide/ex_sysconfig.png
.. |image277| image:: ./images/examples_guide/ex_sysconfig.png
.. |image278| image:: ./images/examples_guide/ex_sysconfig.png
.. |image279| image:: ./images/examples_guide/ex_sysconfig.png
.. |image280| image:: ./images/examples_guide/ex_sysconfig.png
.. |image281| image:: ./images/examples_guide/ex_sysconfig.png
.. |image282| image:: ./images/examples_guide/ex_sysconfig.png
.. |image283| image:: ./images/examples_guide/ex_sysconfig.png
.. |image284| image:: ./images/examples_guide/ex_sysconfig.png
.. |image285| image:: ./images/examples_guide/ex_sysconfig.png
.. |image286| image:: ./images/examples_guide/ex_sysconfig.png
.. |image287| image:: ./images/examples_guide/ex_sysconfig.png
.. |image288| image:: ./images/examples_guide/ex_sysconfig.png
.. |image289| image:: ./images/examples_guide/ex_sysconfig.png
.. |image290| image:: ./images/examples_guide/ex_sysconfig.png
.. |image291| image:: ./images/examples_guide/ex_sysconfig.png
.. |image292| image:: ./images/examples_guide/ex_sysconfig.png
.. |image293| image:: ./images/examples_guide/ex_sysconfig.png
.. |image294| image:: ./images/examples_guide/ex_sysconfig.png
.. |image295| image:: ./images/examples_guide/ex_sysconfig.png
.. |image296| image:: ./images/examples_guide/ex_sysconfig.png
.. |image297| image:: ./images/examples_guide/ex_sysconfig.png

