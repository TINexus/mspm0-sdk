BLDC 电机控制库概述
===================

1. 概述
-------

MSPM0 的 BLDC 电机控制库由三个层组成。MSPM0 DriverLib 层包含定义的所有外设，并使用 SysConfig 进行配置。模块层包含 3 个模块：硬件抽象层 (HAL) 模块、电机驱动器模块和有霍尔传感器的 Trap 模块。HAL 模块提供应用程序编程接口 (API) 来操作和配置 MCU 引脚和外设。电机驱动器模块提供与所用电机驱动器相关的编程。有霍尔传感器的 Trap 模块提供用于控制和生成 PWM 输出的 API。应用层包含由用户定义的 GUI 或应用特定的 API。

.. figure:: ./images/sw_overview_library_layers.png
   :alt: 

.. raw:: html

   <p style="text-align: center;">

图 1 - 显示层和模块的图

.. raw:: html

   </p>

2. HAL 模块
-----------

2.1 概述
~~~~~~~~

HAL 模块包含微控制器特定的代码，提供通用 API 来控制和配置用户定义的引脚和外设。开发 HAL API 是为了能够更改所使用的 HAL 模块，而不需要对其他模块进行任何更改。

HAL 专用于抽象处理控制电机驱动器所需的关键引脚和外设。用户可随意扩展 HAL 的 API 以使用微控制器的其他引脚、外设和特性，但为确保能轻松迁移到该库的新版本，强烈建议不要修改现有的 API。

HAL 层或其 API 中不应存在应用特定或电机驱动器特定的代码，而是应以通用方式处理引脚和外设。例如，电机驱动器可能有一个 nSLEEP 引脚，但 HAL 层将仅提供 API 来控制 GPIO 输出引脚的状态。电机驱动器模块负责将特定的 HAL GPIO 输出引脚关联到电机驱动器的 nSLEEP 引脚。

2.2 枚举
~~~~~~~~

HAL 层使用枚举来确定对不同外设的通用引用。每个外设都有与其所用引脚相关联的单独枚举。这使用户能够更改外设引脚，而无需更改使用其 API 的其他模块中的代码。例如，电机驱动器模块中的 nSLEEP 引脚与 GPIO 外设中的一个枚举相关联。用户可以更改与 GPIO 枚举相关联的引脚，而无需更改电机驱动器模块中的任何代码。以枚举 HAL\_GPIO\_OUT 为例，其中枚举总数表示用作输出的最大 GPIO 数量。

|image0|

.. raw:: html

   <p style="text-align: left;">

图 2 - 表示 GPIO 输出引脚的枚举

.. raw:: html

   </p>

图 2 显示了表示 3 个不同 GPIO 输出引脚的枚举示例。该枚举旨在为 HAL 和电机驱动器 API 提供一种引用 GPIO 输出的通用方法。这里确定的 GPIO 数量是根据应用需求而定，用户可以根据自己的应用随意增减 GPIO 数量。用户需要记住其软件支持的不同电机驱动器所需的 GPIO 输出引脚的最大数量。

|image1|

.. raw:: html

   <p style="text-align: left;">

图 3 - 枚举到 MCU 引脚的映射

.. raw:: html

   </p>

图 3 显示了 LP-MSPM0G3507 HAL 的代码片段，其中显示了 HAL\_GPIO\_OUT\_02 枚举现在如何与 MSPM0G3507 上的特定 GPIO 相关联。GEN\_GPIO\_OUT\_XXXX 定义来自 TI SysConfig，这将在后面论述。请注意，其中每个定义都表示 MSPM0 的 DriverLib API 操作特定引脚所需的值。

|image2|

.. raw:: html

   <p style="text-align: left;">

图 4 - HAL API 示例

.. raw:: html

   </p>

现在，HAL 提供了将枚举关联到特定引脚所需的信息，HAL\_writeGPIOPin() 显示了用于更改引脚（与给定 HAL\_GPIO\_OUT 枚举相关联）输出值的 API。请务必注意，如何利用 HAL 中的内部结构和数组将枚举值转换为 MSPM0 的 DriverLib API 调用。

|image3|

.. raw:: html

   <p style="text-align: left;">

图 5 - 电机驱动器到 HAL 的映射

.. raw:: html

   </p>

这是一个 DRV8316 固件示例的代码片段，它将不同的 HAL 枚举与电机驱动器上的相应引脚相关联。这里，电机上的 nSLEEP 引脚映射到 HAL\_GPIO\_OUT\_02。

|image4|

.. raw:: html

   <p style="text-align: left;">

图 6 - 电机驱动器模块 API

.. raw:: html

   </p>

最后，当用户想要更改 DRV8316 电机驱动器上 nSLEEP 引脚的输出值时，他们可以调用通用 HAL API，同时提供与 nSLEEP 引脚相关联的枚举值来进行更改。 尽管此示例侧重于 HAL\_GPIO\_OUT 枚举，但对于所有其他引脚/外设（HAL 已为其创建了枚举），例如 PWM、ADC 输入、GPIO 输入和 SPI 枚举而言，概念都是相同的。

2.3 TI SysConfig
~~~~~~~~~~~~~~~~

MSPM0 软件利用名为 TI SysConfig 的 GUI 工具来简化引脚和外设的配置。几乎所有 MSPM0 SDK 示例都使用 SysConfig。有关 SysConfig 工作原理及其使用方法的更多信息，请参阅 TI SysConfig。需要注意的是，SDK 提供的 HAL 模块使用 SysConfig，因此您不会看到通过 DriverLib API 调用来初始化外设和引脚。HAL 会使用由 SysConfig 创建的定义将特定引脚和外设映射到不同的通用 HAL 枚举。图 3 显示了由 SysConfig 创建的 GEN\_GPIO\_OUT\_XXXX 定义如何映射到 HAL 结构和枚举值。

3. 电机驱动器模块
-----------------

电机驱动器模块的目标是使用与电机驱动器引脚相关的 HAL 枚举，并提供 API，例如设置睡眠引脚、读取驱动器故障引脚、SPI 读取、SPI 写入、电压和电流测量结果。图 7 显示了 DRV8316 电机驱动器使用的内部结构，及其如何包含用于将 HAL 枚举与电机驱动器特定引脚相关联的变量。电机驱动器模块代码使用 HAL API 来开发电机驱动器模块，但用户可以为应用添加 API 或创建自己的电机驱动器模块。

|image5|

.. raw:: html

   <p style="text-align: left;">

图 7 – DRV8316 内部结构

.. raw:: html

   </p>

3.1 电机驱动器引脚关联
~~~~~~~~~~~~~~~~~~~~~~

在使用电机驱动器模块之前，用户必须将电机驱动器引脚映射到 HAL 枚举，如下所示

|image6|

.. raw:: html

   <p style="text-align: left;">

图 5 - 电机驱动器到 HAL 的映射

.. raw:: html

   </p>

3.2 电机驱动器 API
~~~~~~~~~~~~~~~~~~

电机驱动器 API 特定于给定电机驱动器，用户可以在其中使用此类 API 来配置和控制电机驱动器。例如，DRV8316 具有通过 SPI 修改的控制寄存器。电机驱动器模块包含会更新寄存器的特定 API。

|image7|

.. raw:: html

   <p style="text-align: left;">

图 9 - 电机驱动器模块 API 示例

.. raw:: html

   </p>

对于具有寄存器映射的电机驱动器，寄存器的数量将随电机驱动器的不同而变化。上面的代码片段是一个通用 API，用于更新 DRV 器件中的所有寄存器。用户可以使用单个通用 API 来操作任何寄存器或位字段。用户可以构建许多 API，根据其应用程序需求来更新位字段。

另一种类型的电机驱动器 API 是电压和电流测量，这取决于电机驱动器的硬件和电流测量。例如，DRV8316 硬件包括用于电压测量的电阻分压器，且 DRV8316 包括具有可编程增益和预设电压基准的电流测量放大器。 模块电流和模块电压的 API 通常用于根据输入参数（例如比例因子、电压基准、电压偏置和放大器增益）分别读回电机电压或电机电流。

4. 有霍尔传感器的 Trap 模块
---------------------------

有霍尔传感器的 Trap (halltrap) 模块包含用于 BLDC 电机控制的基于霍尔传感器的梯形算法。该层负责根据霍尔反馈更新 PWM。该代码包含一个 API，可读取数字霍尔信号反馈并更新 PWM。该 API 用于更新 PWM。

|image8|

.. raw:: html

   <p style="text-align: left;">

图 10 – Halltrap 模块 PWM 更新 API

.. raw:: html

   </p>

Halltrap 模块并不了解所使用的驱动器模块。只要用户映射霍尔传感器所连接的 GPIO 枚举，该模块就可以与任何驱动器模块一同使用，而无需更改其中的代码。

|image9|

.. raw:: html

   <p style="text-align: left;">

图 11 - 霍尔传感器引脚到 HAL 引脚

.. raw:: html

   </p>

5. 应用层
---------

该层包含用户特定的代码。用户需要指定驱动器实例（即 DRV8316）halltrap 实例并确保所有引脚都已正确映射。用户可以使用电机驱动器模块和 halltrap 模块 API，并可以使用 HAL API 来执行所有硬件特定操作。

6. API 指南
-----------

-  `有霍尔传感器的 Trap API 指南 <../../doxygen/api_guide/html/index.html>`__

7. 已知问题
-----------

8. 支持的器件
-------------

DRV8316REVM
~~~~~~~~~~~

支持的 MSPM0 LaunchPad

-  `LP-MSPM0G3507 <https://www.ti.com/tool/LP-MSPM0G3507>`__

链接

-  `硬件用户指南 <drv8316/DRV8316_Hardware_User_Guide_CN.html>`__

-  `GUI 用户指南 <drv8316/DRV8316_GUI_User_Guide_CN.html>`__

-  `MSPM0G3507-DRV8316REVM-GUI <https://dev.ti.com/gallery/view/TIMSPGC/MSPM0G-DRV8316REVM-GUI>`__

DRV8329AEVM
~~~~~~~~~~~

支持的 MSPM0 LaunchPad

-  `LP-MSPM0G3507 <https://www.ti.com/tool/LP-MSPM0G3507>`__

链接

-  `硬件用户指南 <drv8329/DRV8329_Hardware_User_Guide_CN.html>`__

-  `GUI 用户指南 <drv8329/DRV8329_GUI_User_Guide_CN.html>`__

-  `MSPM0G3507-DRV8329AEVM-GUI <https://dev.ti.com/gallery/view/TIMSPGC/MSPM0G-DRV8329AEVM-GUI>`__

.. |image0| image:: images/sw_overview_gpio_enum.png
.. |image1| image:: images/sw_overview_gpio_defines.png
.. |image2| image:: images/sw_overview_gpio_output_api.png
.. |image3| image:: images/sw_overview_driver_hal_map.png
.. |image4| image:: images/sw_overview_driver_hal_api.png
.. |image5| image:: images/sw_overview_drv_struct.png
.. |image6| image:: images/sw_overview_driver_hal_map.png
.. |image7| image:: images/sw_overview_register_update.png
.. |image8| image:: images/sw_overview_pwm_update.png
.. |image9| image:: images/sw_overview_hallsensor_map.png

